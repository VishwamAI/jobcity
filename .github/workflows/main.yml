name: Main CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'pnpm'
        cache-dependency-path: './frontend/pnpm-lock.yaml'

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: pnpm install

    - name: Run frontend tests
      working-directory: ./frontend
      run: CI=true pnpm test

    - name: Setup backend test environment
      working-directory: ./backend
      run: |
        echo "DEV_MODE=true" > .env
        echo "DATABASE_URL=sqlite:///:memory:" >> .env
        echo "API_HOST=0.0.0.0" >> .env
        echo "API_PORT=8000" >> .env
        echo "INDEED_EMAIL=test@example.com" >> .env
        echo "INDEED_PASSWORD=testpass123" >> .env

    - name: Run backend tests
      working-directory: ./backend
      run: |
        pytest tests/ -v --junitxml=test-results/results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          backend/test-results/results.xml
          frontend/test-results
